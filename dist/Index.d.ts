import { CodePatterns, ProgrammingLanguages } from './EnumPatterns';
/**
 * The function configures an OpenAI API key for use in TypeScript.
 * @param apiKey - The API key for the OpenAI API. This key is used to authenticate and authorize
 * access to the OpenAI API services.
 */
declare function ConfigureKey(apiKey: string): void;
/**
 * This is a TypeScript function that uses the OpenAI API to transform code from one language or
 * pattern to another.
 * @param {String} InitCode - The initial code that needs to be transformed.
 * @param {ProgrammingLanguages} TargetLanguage - The target programming language that the initial code
 * should be transformed into.
 * @param {CodePatterns} [Pattern] - Optional parameter that specifies the code pattern to transform
 * the initial code into. If not provided, the OpenAI API will generate an equivalent code in the
 * target language without a specific pattern.
 * @returns a Promise that resolves to a string, which is the transformed code generated by the OpenAI
 * API based on the input parameters.
 */
declare function TranformCode(InitCode: String, TargetLanguage: ProgrammingLanguages, Pattern?: CodePatterns): Promise<String>;
export { TranformCode, ConfigureKey, CodePatterns };
